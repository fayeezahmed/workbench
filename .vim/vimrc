if &compatible


end
set encoding=utf-8
syntax on
filetype plugin indent on
set omnifunc=syntaxcomplete#Complete

set rtp+=~/.vim/bundle/Vundle.vim/
cal vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-surround'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'w0rp/ale'
Plugin 'patstockwell/vim-monokai-tasty'
Plugin 'scrooloose/nerdtree'
Plugin 'tmux/tmux'
Plugin 'Valloric/YouCompleteMe'
Plugin 'itchyny/lightline.vim'
Plugin 'universal-ctags/ctags'
Plugin 'vimwiki/vimwiki'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-unimpaired'
Plugin 'pangloss/vim-javascript'
Plugin 'christoomey/vim-conflicted'
call vundle#end()            " required
filetype on

" Color scheme setup
let g:vim_monokai_tasy_italic = 1
colorscheme vim-monokai-tasty
set laststatus=2
set term=xterm-256color
if !has('gui_running')
  set t_Co=256
endif
set noshowmode
set guicursor=i:ver5-iCursor

set tabstop=4 shiftwidth=4 expandtab
set softtabstop=4
"set number
set relativenumber
set path+=~/dazn/catalog-web-chapter/**
set suffixesadd=.js,.jsx
set bs=2
set hlsearch
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" Start autocompletion after 4 chars
let g:ycm_min_num_of_chars_for_completion = 4
let g:ycm_min_num_identifier_candidate_chars = 4
let g:ycm_enable_diagnostic_highlighting = 0

" Don't show YCM's preview window 
set completeopt-=preview
let g:ycm_add_preview_to_completeopt = 0

" ###### CTRLP options ######
"" Remap ctrlp to easier shortcut
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

"" Ignore typical files from search
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }
"" Ignore all those in .gitignore
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
"" Open file in a new buffer if file already open
let g:ctrlp_switch_buffer = 'et'
set tags=tags;/
let g:ctrlp_match_window = 'results:35'
"""VIM WIKI HTML TEMPLATE"""

""let g:vimwiki_list = [{
""  \ 'path': '~/vimwiki/',
""  \ 'template_path': '~/vimwiki/templates/',
""  \ 'template_default': 'default',
""  \ 'template_ext': '.html'}]

"""ALE - ESLINT"""
"" Auto fix files on save
let g:ale_fix_on_save = 0

"" Vim cursor
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=2\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=2\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

"" Macros
"" Boilerplate java class with main method - no imports
let @j = 'ipublic class MyClass {	public static void main(String[€kr args€kr{		// Stuff goes here, change the class name and te€kbhe s€kbarguments'

"" More natural splitting
set splitbelow
set splitright

""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""" MACROS """""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
"" COMMENTING OUT CSS
let @c="I/* \<Esc>A */\<Esc>"
let @v="^3x$2h3x"

""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""WINDOWS"""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
"" WINDOWS STUFF - comment out on Mac or linux
if (&term =~ 'xterm' && &t_Co == 256)
    set t_ut= | set ttyscroll=1
endif

"" Lightline colorscheme
let g:lightline = {
      \ 'colorscheme': 'molokai',
      \ }
